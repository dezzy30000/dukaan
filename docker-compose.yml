version: '3.6'

services:
  web:
    image: dukaanweb
    build:
      context: .
      dockerfile: dukaan.web/Dockerfile
    ports:
      - "51212:80"
    secrets:
      - db_connection_string
      - db_dukaan_web_user_password
    depends_on:
      - database
    networks:
      - webnet
  databaseapi:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://dukaan_web:;Ncd660(83m3V8F@database:5432/dukaandb
      PGRST_DB_SCHEMA: dukaan.web
      PGRST_DB_ANON_ROLE: dukaan_web #In production this role should not be the same as the one used for the connection
      PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
    depends_on:
      - database
    networks:
      - webnet        
  database:
    image: dukaandatabase
    build:
      context: .
      dockerfile: dukaan.database/Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db_postgres_user_password
      POSTGRES_INITDB_ARGS: --data-checksums
    secrets:
      - db_dukaan_web_user_password
      - db_postgres_user_password
    networks:
      - webnet
  databaseadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    env_file:
      - docker/environment_variables/pgadmin.env
    depends_on:
      - database
    networks:
      - webnet
  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      API_URL: http://localhost:3000/
    networks:
      - webnet      
secrets:
  db_connection_string:
    file: docker/secrets/db_connection_string.txt
  db_dukaan_web_user_password:
    file: docker/secrets/db_dukaan_web_user_password.txt
  db_postgres_user_password:
    file: docker/secrets/db_postgres_user_password.txt
networks:
  webnet:
